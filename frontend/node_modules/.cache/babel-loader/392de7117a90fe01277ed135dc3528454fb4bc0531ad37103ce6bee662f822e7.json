{"ast":null,"code":"import React,{useState,useRef,useEffect}from\"react\";import ChatMessage from\"./ChatMessage\";import\"./ChatWindow.css\";import{PiUserCircleDuotone}from\"react-icons/pi\";import{BiDotsVerticalRounded}from\"react-icons/bi\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ChatWindow(_ref){let{messages,setMessages,otherID,handleSetNewMessage}=_ref;// Create a ref to track the bottom of the message list. Used to make it scroll you to the bottom when sending a new message\nconst messageEndRef=useRef(null);useEffect(()=>{if(messageEndRef.current){messageEndRef.current.scrollIntoView({behavior:\"smooth\"});}},[messages]);// When you click send or enter for a messages that is typed out\nconst[inputValue,setInputValue]=useState(\"\");const sendMessage=()=>{if(otherID===-1){return;}// If not empty\nif(inputValue.trim()!==\"\"){const date=new Date();console.log(`Sending to ${otherID}`);const formattedDate=`${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;// console.log(formattedDate);\nsetMessages([...messages,{sender:-1,//Myself right now\ndateTime:formattedDate,msg:inputValue}]);handleSetNewMessage(otherID,-1,formattedDate,inputValue);setInputValue(\"\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-window\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-header-left\",children:[/*#__PURE__*/_jsx(PiUserCircleDuotone,{class:\"user-icon-chat\"}),\"Name: \",otherID?otherID:\"\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-header-right\",children:/*#__PURE__*/_jsx(BiDotsVerticalRounded,{class:\"user-right\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-body\",children:[messages.map((msg,index)=>/*#__PURE__*/_jsx(ChatMessage,{message:msg.msg,isSender:msg.sender===-1?true:false,time:msg.dateTime},index)),/*#__PURE__*/_jsx(\"div\",{ref:messageEndRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Type a message...\",value:inputValue,onChange:e=>setInputValue(e.target.value),onKeyPress:e=>{if(e.key===\"Enter\")sendMessage();}}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,children:\"Send\"})]})]})// </ResizableBox>\n;}export default ChatWindow;","map":{"version":3,"names":["React","useState","useRef","useEffect","ChatMessage","PiUserCircleDuotone","BiDotsVerticalRounded","jsx","_jsx","jsxs","_jsxs","ChatWindow","_ref","messages","setMessages","otherID","handleSetNewMessage","messageEndRef","current","scrollIntoView","behavior","inputValue","setInputValue","sendMessage","trim","date","Date","console","log","formattedDate","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","sender","dateTime","msg","className","children","class","map","index","message","isSender","time","ref","type","placeholder","value","onChange","e","target","onKeyPress","key","onClick"],"sources":["C:/Users/justa/Desktop/COSC 617 Project Online/frontend/src/ChatWindow/ChatWindow.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport ChatMessage from \"./ChatMessage\";\r\nimport \"./ChatWindow.css\";\r\nimport { PiUserCircleDuotone } from \"react-icons/pi\";\r\n\r\nimport { BiDotsVerticalRounded } from \"react-icons/bi\";\r\n\r\nfunction ChatWindow({ messages, setMessages, otherID, handleSetNewMessage }) {\r\n  // Create a ref to track the bottom of the message list. Used to make it scroll you to the bottom when sending a new message\r\n  const messageEndRef = useRef(null);\r\n  useEffect(() => {\r\n    if (messageEndRef.current) {\r\n      messageEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [messages]);\r\n\r\n  // When you click send or enter for a messages that is typed out\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const sendMessage = () => {\r\n    if (otherID === -1) {\r\n      return;\r\n    }\r\n    // If not empty\r\n    if (inputValue.trim() !== \"\") {\r\n      const date = new Date();\r\n      console.log(`Sending to ${otherID}`);\r\n      const formattedDate = `${date.getFullYear()}-${\r\n        date.getMonth() + 1\r\n      }-${date.getDate()} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\r\n      // console.log(formattedDate);\r\n\r\n      setMessages([\r\n        ...messages,\r\n        {\r\n          sender: -1, //Myself right now\r\n          dateTime: formattedDate,\r\n          msg: inputValue,\r\n        },\r\n      ]);\r\n      handleSetNewMessage(otherID, -1, formattedDate, inputValue);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-window\">\r\n      <div className=\"chat-header\">\r\n        <div className=\"chat-header-left\">\r\n          <PiUserCircleDuotone class=\"user-icon-chat\" />\r\n          Name: {otherID ? otherID : \"\"}\r\n        </div>\r\n        <div className=\"chat-header-right\">\r\n          <BiDotsVerticalRounded class=\"user-right\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"chat-body\">\r\n        {/* Creates a chat message for each message and then displays them based on if they are the sender or not */}\r\n\r\n        {messages.map((msg, index) => (\r\n          <ChatMessage\r\n            key={index}\r\n            message={msg.msg}\r\n            isSender={msg.sender === -1 ? true : false}\r\n            time={msg.dateTime}\r\n          />\r\n        ))}\r\n        <div ref={messageEndRef} />\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type a message...\"\r\n          value={inputValue}\r\n          onChange={(e) => setInputValue(e.target.value)}\r\n          onKeyPress={(e) => {\r\n            if (e.key === \"Enter\") sendMessage();\r\n          }}\r\n        />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n    // </ResizableBox>\r\n  );\r\n}\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
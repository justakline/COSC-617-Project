{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\justa\\\\Desktop\\\\COSC 617 Project Online\\\\frontend\\\\src\\\\ChatWindow\\\\ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport ChatMessage from \"./ChatMessage\";\nimport \"./ChatWindow.css\";\nimport { PiUserCircleDuotone } from \"react-icons/pi\";\nimport { ResizableBox } from \"react-resizable\";\nimport { BiDotsVerticalRounded } from \"react-icons/bi\";\nimport { BiSearch } from \"react-icons/bi\";\nimport { RxDropdownMenu } from \"react-icons/rx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatWindow({\n  messages,\n  setMessages,\n  otherID,\n  handleSetNewMessage\n}) {\n  _s();\n  // Create a ref to track the bottom of the message list. Used to make it scroll you to the bottom when sending a new message\n  const messageEndRef = useRef(null);\n  useEffect(() => {\n    if (messageEndRef.current) {\n      messageEndRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [messages]);\n\n  // When you click send or enter for a messages that is typed out\n  const [inputValue, setInputValue] = useState(\"\");\n  const sendMessage = () => {\n    if (otherID == -1) {\n      return;\n    }\n    // If not empty\n    if (inputValue.trim() !== \"\") {\n      const date = new Date();\n      console.log(`Sending to ${otherID}`);\n      const formattedDate = `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\n      // console.log(formattedDate);\n\n      setMessages([...messages, {\n        sender: -1,\n        //Myself right now\n        dateTime: formattedDate,\n        msg: inputValue\n      }]);\n      handleSetNewMessage(otherID, -1, formattedDate, inputValue);\n      setInputValue(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header-left\",\n        children: [/*#__PURE__*/_jsxDEV(PiUserCircleDuotone, {\n          class: \"user-icon-chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), \"Name: \", otherID ? otherID : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header-right\",\n        children: /*#__PURE__*/_jsxDEV(BiDotsVerticalRounded, {\n          class: \"user-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-body\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n        message: msg.msg,\n        isSender: msg.sender == -1 ? true : false,\n        time: msg.dateTime\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messageEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a message...\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        onKeyPress: e => {\n          if (e.key === \"Enter\") sendMessage();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this)\n  // </ResizableBox>\n  ;\n}\n_s(ChatWindow, \"01AUISDNmL4F5d8VNGMfq+baIR4=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ChatMessage","PiUserCircleDuotone","ResizableBox","BiDotsVerticalRounded","BiSearch","RxDropdownMenu","jsxDEV","_jsxDEV","ChatWindow","messages","setMessages","otherID","handleSetNewMessage","_s","messageEndRef","current","scrollIntoView","behavior","inputValue","setInputValue","sendMessage","trim","date","Date","console","log","formattedDate","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","sender","dateTime","msg","className","children","class","fileName","_jsxFileName","lineNumber","columnNumber","map","index","message","isSender","time","ref","type","placeholder","value","onChange","e","target","onKeyPress","key","onClick","_c","$RefreshReg$"],"sources":["C:/Users/justa/Desktop/COSC 617 Project Online/frontend/src/ChatWindow/ChatWindow.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport ChatMessage from \"./ChatMessage\";\r\nimport \"./ChatWindow.css\";\r\nimport { PiUserCircleDuotone } from \"react-icons/pi\";\r\nimport { ResizableBox } from \"react-resizable\";\r\nimport { BiDotsVerticalRounded } from \"react-icons/bi\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\nimport { RxDropdownMenu } from \"react-icons/rx\";\r\n\r\nfunction ChatWindow({ messages, setMessages, otherID, handleSetNewMessage }) {\r\n  // Create a ref to track the bottom of the message list. Used to make it scroll you to the bottom when sending a new message\r\n  const messageEndRef = useRef(null);\r\n  useEffect(() => {\r\n    if (messageEndRef.current) {\r\n      messageEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [messages]);\r\n\r\n  // When you click send or enter for a messages that is typed out\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const sendMessage = () => {\r\n    if (otherID == -1) {\r\n      return;\r\n    }\r\n    // If not empty\r\n    if (inputValue.trim() !== \"\") {\r\n      const date = new Date();\r\n      console.log(`Sending to ${otherID}`);\r\n      const formattedDate = `${date.getFullYear()}-${\r\n        date.getMonth() + 1\r\n      }-${date.getDate()} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\r\n      // console.log(formattedDate);\r\n\r\n      setMessages([\r\n        ...messages,\r\n        {\r\n          sender: -1, //Myself right now\r\n          dateTime: formattedDate,\r\n          msg: inputValue,\r\n        },\r\n      ]);\r\n      handleSetNewMessage(otherID, -1, formattedDate, inputValue);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-window\">\r\n      <div className=\"chat-header\">\r\n        <div className=\"chat-header-left\">\r\n          <PiUserCircleDuotone class=\"user-icon-chat\" />\r\n          Name: {otherID ? otherID : \"\"}\r\n        </div>\r\n        <div className=\"chat-header-right\">\r\n          <BiDotsVerticalRounded class=\"user-right\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"chat-body\">\r\n        {/* Creates a chat message for each message and then displays them based on if they are the sender or not */}\r\n\r\n        {messages.map((msg, index) => (\r\n          <ChatMessage\r\n            key={index}\r\n            message={msg.msg}\r\n            isSender={msg.sender == -1 ? true : false}\r\n            time={msg.dateTime}\r\n          />\r\n        ))}\r\n        <div ref={messageEndRef} />\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type a message...\"\r\n          value={inputValue}\r\n          onChange={(e) => setInputValue(e.target.value)}\r\n          onKeyPress={(e) => {\r\n            if (e.key === \"Enter\") sendMessage();\r\n          }}\r\n        />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n    // </ResizableBox>\r\n  );\r\n}\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}